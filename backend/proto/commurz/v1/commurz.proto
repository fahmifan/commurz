syntax = "proto3";

package commurz.v1;

option go_package = "github.com/fahmifan/commurz/pkg/pb/commurz/v1;commurzv1";

// import "google/protobuf/timestamp.proto";

// Resource definition
message User {
  string id = 1;
  string email = 2;
}

message Product {
  string id = 1;
  string name = 2;
  int64 price = 3;
  int64 current_stock = 4;
  string text_price_idr = 5; // price in text format, e.g. "Rp 10.000"
}

message OrderProduct {
  string id = 1;
  string name = 2;
  int64 price = 3;
  int64 current_stock = 4;
}

message Cart {
  string id = 1;
  string user_id = 2;
  
  User user = 3;
  repeated CartItem items = 4;
}

message CartItem {
  string id = 1;
  string cart_id = 2;
  string product_id = 3;
  int64 quantity = 4;
  int64 product_price = 5;
  OrderProduct product = 6;
}

message Order {
  string id = 1;
  string user_id = 2;
  int64 total_price = 3;
}

message OrderItem {
  string id = 1;
  string order_id = 2;
  string product_id = 3;
  int64 quantity = 4;
  int64 product_price = 5;
  OrderProduct product = 6;
}

// Requests definition
message CreateUserRequest {
  string email = 1;
  string password = 2;
}

message CreateProductRequest {
  string name = 1;
  int64 price = 2;
}

message ChangeProductStockRequest {
  string product_id = 1;
  int64 stock_quantity = 2;
}

message AddProductToCartRequest {
  string product_id = 1;
  int64 quantity = 2;
  
  string user_id = 3; // TODO: remove this, change to auth token/session
}

message CheckoutAllRequest {
  string user_id = 1; // TODO: remove this, change to auth token/session
}

message ListUsersRequest {}

message ListUsersResponse {
  repeated User users = 1;
}

// Service definition
service CommurzService {
  // user
  rpc CreateUser(CreateUserRequest) returns (User) {}
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {}

  // product
  rpc CreateProduct(CreateProductRequest) returns (Product) {}
  rpc AddProductStock(ChangeProductStockRequest) returns (Product) {}
  rpc ReduceProductStock(ChangeProductStockRequest) returns (Product) {}

  // cart
  rpc AddProductToCart(AddProductToCartRequest) returns (Cart) {}
  rpc CheckoutAll(CheckoutAllRequest) returns (Order) {}
}